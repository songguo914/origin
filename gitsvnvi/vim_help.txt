命令行模式：
1 vi中向上翻页是ctrl+b, 向下翻页是ctrl+f; 
上移是k，下移是j，左移是h，右移是l;
到达屏幕显示页的首行是H，到达显示页的尾行是L;
到达行首是0,到达行尾是$;
到达文件尾是shift+g(即G);gg将光标移动到文件的开始位置。
用行号+G可定位到指定的行上。
查询是/查询内容(以上均指在命令行模式)，n是查询下一个，N是查询上一个；
左右缩进分别是 < >
d$删除到行尾，d0删除到行首，dw删除单词
v0选中从当前位置到行首，v$选中当前位置到行尾
VG选中当前位置向下的所有行

2 ctrl+n单词补全

3 v按字符选择(配合使用上下左右键)。经常使用的模式;
V按行选择(配合使用上下键)。这在你想拷贝或者移动很多行的文本的时候特别有用;
ctrl+v块选择(配合使用上下左右键)。你可以选择一个矩形块;

4 y复制
复制n个单词：y+number+w
复制一行：yy
复制n行：nyy
复制一块：ctrl+v配合使用y
不知复制多少行：V配合使用y

5 删除
删除一个字符，使用x。
删除多个字符，使用ctrl+v进入可视模式，然后移动键盘上的“上下左右”键，将要删除的字符串选中，然后使用d就删除了。
删除一行，使用dd；
删除n行，使用ndd；
删除不知道多少行，首先使用ctrl+v进入可视模式，然后移动键盘上的“上下左右”键，将要删除的行选中，然后使用d就删除了。

6 撤销
vim中的撤销有两种，一种是向左撤销，一种是向右撤销。比如我们刚删除了一行，想将其回复，使用u就可以，恢复后又想删除，使用ctrl+r就可以

7 另外一半符号匹配
在vim中使用%可以匹配另外一半符号出现的位置。 
当我们将光标放在第一个大括号哪里，想找到另外一个与之匹配的大括号时，使用%。就可以了。

8 多标签
标签页操作
建立多标签页:tab split(末行模式)
标签页切换gt(命令行模式)
新建标签:tabnew(末行模式)

9 多窗口-屏幕分割
备注：^W为在一般模式下直接按 ctr + w，不用输“：”
水平切割^Ws
垂直切割^Wv
关闭当前窗口^Wc

窗口切换
切换到左窗口^Wh
切换到右窗口^Wl
切换到上窗口^Wk
切换到下窗口^Wj
（使用^w + 方向键也行的）

窗口移动
当前窗口左移^WH
当前窗口右移^WL
当前窗口上移^WK
当前窗口下移^WJ　

窗口大小
最大高度^W_
最小高度^W1_
最大宽度^W|
最小宽度^W1|

屏幕切割
水平切割：
:split
:split xxx（要打开的文件名）
:new（在新窗口创建文件）
<CTRL＋W> k：跳转到上面的窗口 （若为大写K，则是把当前窗口调至上方）
<CTRL＋W> j：跳转到下面的窗口 （类似于上）

垂直切割：
:vsplit
:vsplit xxx（要打开的文件名）
:vnew（在新窗口创建文件）
:only        取消分屏

<CTRL＋W> h：跳转到左边的窗口 （若为大写H，则是把当前窗口调至左方）
<CTRL＋W> l：跳转到右边的窗口 （类似于上）
<CTRL+W> w：在窗口之间跳转
<CTRL+W> +：扩大窗口 (或在当前窗口位置，输入命令：res +9)
<CTRL+W> －：缩小窗口
在一个窗口下，打开3个文件。
先打开一个vim 文件名 （记住一定是vim啊！）
然后在vi的命令输入状态下输入
:sp 另外一个文件的路径及文件名
如此就可以在一个窗口打开3个文件了。
可以使用 ctrl ＋ 两次按 w
在3个文件中切换

10 进入插入模式
i　　　　insert，光标前插入
I　　　　行首插入
a　　　　append，光标后插入
A　　　　行末插入
o　　　　当前行下面添加新空白行
O　　　　当前行上面添加新空白行

11 字符替换
如果要将vim里的一个a字符改成c ——讲光标移到a处，然后按r放开后再按c。
交换位置
交换两个相邻字母的位置：按x然后按p （剪切再粘贴）

12 替换命令可以在全文中用一个单词替换另一个单词：

:%s/four/4/g

“%” 范围前缀表示在所有行中执行替换。最后的 “g” 标记表示替换行中的所有匹配点。如果仅仅对当前行进行操作，那么只要去掉%即可

  如果你有一个象 “thirtyfour” 这样的单词，上面的命令会出错。这种情况下，这个单词会被替换成”thirty4″。要解决这个问题，用 “\<” 来指定匹配单词开头：

       :%s/\<four/4/g

显然，这样在处理 “fourty” 的时候还是会出错。用 “\>” 来解决这个问题：

       :%s/\<four\>/4/g

如果你在编码，你可能只想替换注释中的 “four”，而保留代码中的。由于这很难指定，可以在替换命令中加一个 “c” 标记，这样，Vim 会在每次替换前提示你：

       :%s/\<four\>/4/gc

删除多余的空格

要删除这些每行后面多余的空格，可以执行如下命令：

       :%s/\s\+$//

命令前面指明范围是 “%”，所以这会作用于整个文件。”substitute” 命令的匹配模式是

“\s\+$”。这表示行末（$）前的一个或者多个（\+）空格（\s）。替换命令的 “to” 部分是空的：”//”。这样就会删除那些匹配的空白字符。

指定单位替换
:行号1,行号2s/替换前/替换后/g,替换指定行号1和行号2之间的内容。
如果替换时需确认那么在g后加个c参数。这样每一个替换前都需要确认

13 命令组合

目前用vim感觉到最爽的地方，特别是t/f，如从光标开始向后删除到字符'}' -> dt}，从光标开始向前删除到字符'{' -> dt{

14 在一个文件里打开两个文件：

：vnew  ——竖着打开两个文件

：new  ——横着打开两个文件

：bd  ——光标光标所在的文件

ctrl+ww  ——光标在窗口间切换

15 注释
注释一行  ——ctrl+c
注释一块：块选然后 ctrl+c

16 缩进对齐
块选  输入 >  ：缩进
块选  输入  <  ：缩进返回
在insert mode下对齐函数语句：
ctrl+t    往右移动对齐
ctrl+d    往左移动对齐


末行模式：
1 在末行模式下（输入：）输入number后按enter就可以将光标移动到指定的行。

2 查找某个字符串，在命令行中输入:/string，光标就移动到第一个出现string的行，当输入n，光标将移动到下一处出现string的行，再输入n，将继续向下找，当找到最后一个string所出现的行，再输出n时，就回到第一次出现string的行。
(/string查找指定字符串，n从开始向结束，即向下。N从结束向开始，即向上)
