string：     字符串（即不能修改的字符list）
代码如下:
str = "Hello My friend"

字符串是一个整 体。如果你想直接修改字符串的某一部分，是不可能的。但我们能够读出字符串的某一部分。
子字符串的提取
代码如下:
str[:6]

字符串包含 判断操作符：in，not in
代码如下:
"He" in str
"she" not in str

string模块，还提供了很多方法，如
代码如下:
S.find(substring, [start [,end]]) #可指范围查找子串，返回索引值，否则返回-1
S.rfind(substring,[start [,end]]) #反向查找
S.index(substring,[start [,end]]) #同find，只是找不到产生ValueError异常
S.rindex(substring,[start [,end]])#同上反向查找
S.count(substring,[start [,end]]) #返回找到子串的个数
S.lowercase()
S.capitalize()      #首字母大写
S.lower()           #转小写
S.upper()           #转大写
S.swapcase()        #大小写互换
S.split(str, ' ')   #将string转list，以空格切分
S.join(list, ' ')   #将list转string，以空格连接

 
处理字符串的内置函数
代码如下:
len(str)                #串长度
cmp("my friend", str)   #字符串比较。第一个大，返回1
max('abcxyz')           #寻找字符串中最大的字符
min('abcxyz')           #寻找字符串中最小的字符
string的转换
float(str) #变成浮点数，float("1e-1″)  结果为0.1
int(str)        #变成整型，  int("12″)  结果为12
int(str,base)   #变成base进制整型数，int("11″,2) 结果为3
long(str)       #变成长整型，
long(str,base)  #变成base进制长整型，

 
字符串的格式化（注意其转义字符，大多如C语言的，略）
代码如下:
str_format % (参数列表) #参数列表是以tuple的形式定义的，即不可运行中改变
>>>print ""%s's height is %dcm" % ("My brother", 180)
#结果显示为 My brother's height is 180cm

 
list 和 tuple 的相互转化
代码如下:
tuple(ls)
list(ls)

 
Python 去掉List中重复的元素
 
代码如下:
a = [3, 3, 5, 7, 7, 5, 4, 2]
a = list(set(a)) # [2, 3, 4, 5, 7] 连排序都做好了

3. 数组排序
>>> def comp(x,y):
… if x>y:
… return -1
… elif x==y:
… return 0
… else :
… return 1
>>> unsorted_list = [82, 67, 10, 46, 81, 40, 71, 88, 55]
>>> unsorted_list.sort(comp)
[88, 82, 81, 71, 67, 55, 46, 40, 10]


list 操作符:,+,*，关键字del
[1,2]+[3,4] #为[1,2,3,4]。同extend()
[2]*4 #为[2,2,2,2]
del L[1] #删除指定下标的元素
del L[1:3] #删除指定下标范围的元素


list的方法
代码示例:
L.append(var) #追加元素
L.insert(index,var)
L.pop(var) #返回最后一个元素，并从list中删除之
L.remove(var) #删除第一次出现的该元素
L.count(var) #该元素在列表中出现的个数
L.index(var) #该元素的位置,无则抛异常
L.extend(list) #追加list，即合并list到L上
L.sort() #排序
L.reverse() #倒序

在列表中插入一个值
sample_list[0:0] = ['sample value']